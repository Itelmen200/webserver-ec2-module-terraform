---
version: '2.1'
orbs:
  terraform: circleci/terraform@3.2.0
jobs:

  terraform-init:
    executor: terraform/default
    steps:
      - checkout
      - run : pwd
      - terraform/init:
          path: ./infrastructure


  terraform-validate:
    executor: terraform/default
    steps:
      - checkout
      - terraform/validate:
          path: ./infrastructure


  terraform-plan:
    executor: terraform/default
    steps:
      - checkout
      - terraform/plan:
          path: ./infrastructure


  terraform-apply:
    working_directory: ./infrastructure
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform init -input=false
            terraform plan -out tfapply -var-file terraform.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  terraform-destroy:
    executor: terraform/default
    steps:
      - checkout
      - terraform/destroy:
          path: ./infrastructure


  terratest:
    docker:
      - image: cimg/go:1.19.4
    steps:
      - checkout

      - run: wget https://releases.hashicorp.com/terraform/1.3.5/terraform_1.3.5_linux_amd64.zip

      - run: sudo unzip terraform_1.3.5_linux_amd64.zip -d /usr/local/bin

      - run: ls -l /usr/local/bin

      - run: terraform -version

      - run: ls -la 

      - run: go mod init mytests
      - run: go mod tidy

      - run:
          name: Run tests
          command: go test -v 
  




workflows:
  deploy_infrastructure:
    jobs:


    - terraform-init:
        context: 
          - terraform
        
        


    - terraform-validate:
        context: 
          - terraform
        requires:
        - terraform-init


    - terraform-plan:
        context: 
          - terraform
        requires:
        - terraform-validate


    - approve-plan:
        type: approval
        requires:
        - terraform-plan


    - terraform-apply:
        context: 
          - terraform
        requires:
        # - terraform-plan
        - approve-plan


    # - terratest:
    #     context: 
    #       - terraform
    #     requires:
    #     # - approve-plan
    #     - terraform-apply


    - approve-test:
        type: approval
        requires:
        - terraform-apply
        # - approve-plan
        # - terratest


    - terraform-destroy:
        context: 
          - terraform
        requires:
        # - approve-plan
        - approve-test

















